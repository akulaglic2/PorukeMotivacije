{"ast":null,"code":"var _jsxFileName = \"/Users/azraibric/Documents/PorukeMotivacije/src/components/Notification/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loadable from \"react-loadable\";\nimport { Box, Flex, styled } from \"reakit\";\nimport * as style from \"../../assets/common/Styles\";\nimport CloseIcon from \"../assets/icons/close-icon.png\";\nconst NotificationHolder = styled(Flex)`\n  width: 100%;\n  padding: 0 30px;\n`;\nconst NotificationWrapper = styled(Flex)`\n  padding: 0.6rem;\n  margin: 0 auto;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  display: ${props => props.show ? \"flex\" : \"none\"};\n  background-color: ${style.Colors.Astral};\n  color: ${style.Colors.white};\n  border-radius: 0.1rem;\n  align-items: center;\n  max-width: 1440px;\n  width: 100%;\n`;\nconst LogoIcon = styled.img`\n  height: 20px;\n  width: 20px;\n  padding: 12px 0 0 30px;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst Notification = props => {\n  const {\n    show,\n    onClose,\n    message\n  } = props;\n  return /*#__PURE__*/React.createElement(NotificationHolder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NotificationWrapper, {\n    backgroundColor: style.Colors.ErrorRed,\n    show: show,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, message, /*#__PURE__*/React.createElement(LogoIcon, {\n    src: CloseIcon,\n    onClick: () => onClose(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Notification;","map":{"version":3,"sources":["/Users/azraibric/Documents/PorukeMotivacije/src/components/Notification/index.js"],"names":["React","PropTypes","Loadable","Box","Flex","styled","style","CloseIcon","NotificationHolder","NotificationWrapper","props","show","Colors","Astral","white","LogoIcon","img","Notification","onClose","message","ErrorRed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,QAAkC,QAAlC;AACA,OAAO,KAAKC,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AAEA,MAAMC,kBAAkB,GAAGH,MAAM,CAACD,IAAD,CAAO;AACxC;AACA;AACA,CAHA;AAKA,MAAMK,mBAAmB,GAAGJ,MAAM,CAACD,IAAD,CAAO;AACzC;AACA;AACA;AACA;AACA,aAAcM,KAAD,IAAYA,KAAK,CAACC,IAAN,GAAa,MAAb,GAAsB,MAAQ;AACvD,sBAAsBL,KAAK,CAACM,MAAN,CAAaC,MAAO;AAC1C,WAAWP,KAAK,CAACM,MAAN,CAAaE,KAAM;AAC9B;AACA;AACA;AACA;AACA,CAZA;AAaA,MAAMC,QAAQ,GAAGV,MAAM,CAACW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,MAAMC,YAAY,GAAIP,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA,IAAF;AAAQO,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA6BT,KAAnC;AACA,sBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AAAqB,IAAA,eAAe,EAAEJ,KAAK,CAACM,MAAN,CAAaQ,QAAnD;AAA6D,IAAA,IAAI,EAAET,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,OADH,eAGE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEZ,SAAf;AAA0B,IAAA,OAAO,EAAE,MAAMW,OAAO,CAAC,KAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AASD,CAXD;;AAaA,eAAeD,YAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loadable from \"react-loadable\";\nimport { Box, Flex, styled } from \"reakit\";\nimport * as style from \"../../assets/common/Styles\";\nimport CloseIcon from \"../assets/icons/close-icon.png\";\n\nconst NotificationHolder = styled(Flex)`\n  width: 100%;\n  padding: 0 30px;\n`;\n\nconst NotificationWrapper = styled(Flex)`\n  padding: 0.6rem;\n  margin: 0 auto;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  display: ${(props) => (props.show ? \"flex\" : \"none\")};\n  background-color: ${style.Colors.Astral};\n  color: ${style.Colors.white};\n  border-radius: 0.1rem;\n  align-items: center;\n  max-width: 1440px;\n  width: 100%;\n`;\nconst LogoIcon = styled.img`\n  height: 20px;\n  width: 20px;\n  padding: 12px 0 0 30px;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst Notification = (props) => {\n  const { show, onClose, message } = props;\n  return (\n    <NotificationHolder>\n      <NotificationWrapper backgroundColor={style.Colors.ErrorRed} show={show}>\n        {message}\n\n        <LogoIcon src={CloseIcon} onClick={() => onClose(false)} />\n      </NotificationWrapper>\n    </NotificationHolder>\n  );\n};\n\nexport default Notification;\n"]},"metadata":{},"sourceType":"module"}