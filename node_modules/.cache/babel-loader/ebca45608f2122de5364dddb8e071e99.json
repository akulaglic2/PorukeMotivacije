{"ast":null,"code":"var _jsxFileName = \"/Users/azraibric/Documents/PorukeMotivacije/src/pages/AddCategory/index.js\";\nimport React, { useState } from \"react\";\nimport { Button, styled } from \"reakit\";\nimport { Colors, Size, Fonts, style } from \"../../assets/common/Styles\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport Input from \"../../components/Input\";\nimport Notification from \"../../components/Notification\";\nimport { connect } from \"react-redux\";\nconst Wrapper = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: 100px;\n  gap: 20px;\n`;\nconst StyledButton = styled(Button)`\n  background-color: #88b15a;\n  border: none;\n  color: ${Colors.white};\n  cursor: pointer;\n  font-size: ${Fonts.FontSize.medium};\n  font-weight: bold;\n  margin: 1em 0;\n  padding: 1em 2em;\n  border-radius: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst FormHeader = styled.p`\n  font-size: ${Fonts.FontSize.large};\n  font-weight: bold;\n  text-align: start;\n`;\n\nconst AddCategory = props => {\n  const history = useHistory();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const routeChange = () => {\n    history.push(`/`);\n  };\n\n  onSubmit = values => {\n    const {\n      userLogin,\n      baseUrl\n    } = this.props;\n\n    if (values) {\n      this.setState({\n        isLoading: true\n      });\n      return userLogin({\n        login: values.emailOrPhoneNumber,\n        password: values.password\n      }).then(() => {\n        const {\n          history\n        } = this.props;\n        if (!this.unmounted) this.setState({\n          isLoading: false\n        }, () => history.push(`${baseUrl}/`));\n      }).catch(error => {\n        this.setState({\n          isLoading: false\n        });\n        throw new SubmissionError({\n          _error: error.message.map(message => message.title)\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"New category\"), /*#__PURE__*/React.createElement(Field, {\n    key: \"category_name\",\n    id: \"category_name\",\n    name: \"category_name\",\n    component: Input,\n    type: \"input\",\n    label: \"Category name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StyledButton, {\n    type: \"button\",\n    onClick: routeChange,\n    id: \"tInviteToCL.cancel\",\n    selfJustify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Add new category\"), /*#__PURE__*/React.createElement(Notification, {\n    message: \"success\",\n    show: true,\n    type: \"success\",\n    onClose: setIsOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default connect(null)(reduxForm({\n  // a unique name for the form\n  form: \"addCategoryForm\"\n})(AddCategory));","map":{"version":3,"sources":["/Users/azraibric/Documents/PorukeMotivacije/src/pages/AddCategory/index.js"],"names":["React","useState","Button","styled","Colors","Size","Fonts","style","Redirect","Route","Switch","useHistory","Field","reduxForm","Input","Notification","connect","Wrapper","form","StyledButton","white","FontSize","medium","FormHeader","p","large","AddCategory","props","history","isOpen","setIsOpen","routeChange","push","onSubmit","values","userLogin","baseUrl","setState","isLoading","login","emailOrPhoneNumber","password","then","unmounted","catch","error","SubmissionError","_error","message","map","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, styled } from \"reakit\";\nimport { Colors, Size, Fonts, style } from \"../../assets/common/Styles\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\n\nimport { Field, reduxForm } from \"redux-form\";\nimport Input from \"../../components/Input\";\nimport Notification from \"../../components/Notification\";\nimport { connect } from \"react-redux\";\n\nconst Wrapper = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: 100px;\n  gap: 20px;\n`;\n\nconst StyledButton = styled(Button)`\n  background-color: #88b15a;\n  border: none;\n  color: ${Colors.white};\n  cursor: pointer;\n  font-size: ${Fonts.FontSize.medium};\n  font-weight: bold;\n  margin: 1em 0;\n  padding: 1em 2em;\n  border-radius: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst FormHeader = styled.p`\n  font-size: ${Fonts.FontSize.large};\n  font-weight: bold;\n  text-align: start;\n`;\n\nconst AddCategory = (props) => {\n  const history = useHistory();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const routeChange = () => {\n    history.push(`/`);\n  };\n\n  onSubmit = (values) => {\n    const { userLogin, baseUrl } = this.props;\n\n    if (values) {\n      this.setState({ isLoading: true });\n      return userLogin({\n        login: values.emailOrPhoneNumber,\n        password: values.password,\n      })\n        .then(() => {\n          const { history } = this.props;\n          if (!this.unmounted)\n            this.setState({ isLoading: false }, () =>\n              history.push(`${baseUrl}/`)\n            );\n        })\n        .catch((error) => {\n          this.setState({ isLoading: false });\n          throw new SubmissionError({\n            _error: error.message.map((message) => message.title),\n          });\n        });\n    }\n  };\n\n  return (\n    <Wrapper {...props}>\n      <FormHeader>New category</FormHeader>\n      <Field\n        key={\"category_name\"}\n        id=\"category_name\"\n        name=\"category_name\"\n        component={Input}\n        type=\"input\"\n        label={\"Category name\"}\n      />\n\n      <StyledButton\n        type=\"button\"\n        onClick={routeChange}\n        id=\"tInviteToCL.cancel\"\n        selfJustify=\"center\"\n      >\n        {\"Add new category\"}\n      </StyledButton>\n      <Notification\n        message={\"success\"}\n        show={true}\n        type={\"success\"}\n        onClose={setIsOpen}\n      ></Notification>\n    </Wrapper>\n  );\n};\n\nexport default connect(null)(\n  reduxForm({\n    // a unique name for the form\n    form: \"addCategoryForm\",\n  })(AddCategory)\n);\n"]},"metadata":{},"sourceType":"module"}