{"ast":null,"code":"var _jsxFileName = \"/Users/azraibric/Documents/PorukeMotivacije/src/pages/Home/PopupTrash/index.js\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Button, Flex, styled } from \"reakit\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport { Colors, Fonts } from \"../../../assets/common/Styles\";\nimport Input from \"../../../components/Input\";\nimport CloseIcon from \"../assets/close-icon.png\";\nimport { removeQuote } from \"../../../store/actions/quotes\";\nimport { connect } from \"react-redux\";\nconst Container = styled.form`\n  position: absolute;\n  background: #00000050;\n  width: 100%;\n  height: 100vh;\n  top: 0;\n  left: 0;\n`;\nconst FlexStyled = styled(Flex)`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  width: 70%;\n  margin: 0 auto;\n  height: auto;\n  max-height: 70vh;\n  margin-top: calc(100vh - 85vh - 20px);\n  background: #fff;\n  border-radius: 4px;\n  padding: 20px;\n  border: 1px solid #999;\n  overflow: auto;\n  flex-direction: column;\n  gap: 100px;\n`;\nconst FlexCloseAndSave = styled(Flex)`\n  display: flex;\n  justify-content: flex-end;\n  flex-direction: column;\n`;\nconst LogoIcon = styled.img`\n  height: 20px;\n  width: 20px;\n  position: relative;\n  left: 80px;\n  cursor: pointer;\n`;\nconst StyledButton = styled(Button)`\n  background-color: #88b15a;\n  border: none;\n  color: ${Colors.white};\n  cursor: pointer;\n  font-size: ${Fonts.FontSize.medium};\n  font-weight: bold;\n  margin: 1em 0;\n  padding: 1em 2em;\n  border-radius: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst PopupTrash = props => {\n  const {\n    open,\n    onClose,\n    content,\n    handleSubmit,\n    removeQuote,\n    itemID,\n    reset\n  } = props;\n\n  const onSubmit = values => {\n    onClose(false);\n    removeQuote(itemID);\n  };\n\n  return open ? /*#__PURE__*/React.createElement(Container, {\n    reset: \"popupTrashForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, console.log(\"fff\", props), /*#__PURE__*/React.createElement(FlexStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, content), /*#__PURE__*/React.createElement(FlexCloseAndSave, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledButton, {\n    type: \"submit\",\n    id: \"saveQuote\",\n    selfJustify: \"center\",\n    onClick: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(StyledButton, {\n    type: \"submit\",\n    id: \"saveQuote\",\n    selfJustify: \"center\",\n    onClick: () => onClose(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Close\")))) : \"\";\n};\n\nconst mapStateToProps = store => {\n  return {\n    data: store.quotes.posts\n  };\n};\n\nconst mapDispatchToProps = {\n  removeQuote,\n  reset\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  // a unique name for the form\n  form: \"popupTrashForm\"\n})(PopupTrash));","map":{"version":3,"sources":["/Users/azraibric/Documents/PorukeMotivacije/src/pages/Home/PopupTrash/index.js"],"names":["React","useState","useHistory","Box","Button","Flex","styled","Field","reduxForm","reset","Colors","Fonts","Input","CloseIcon","removeQuote","connect","Container","form","FlexStyled","FlexCloseAndSave","LogoIcon","img","StyledButton","white","FontSize","medium","PopupTrash","props","open","onClose","content","handleSubmit","itemID","onSubmit","values","console","log","mapStateToProps","store","data","quotes","posts","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Button, Flex, styled } from \"reakit\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport { Colors, Fonts } from \"../../../assets/common/Styles\";\nimport Input from \"../../../components/Input\";\nimport CloseIcon from \"../assets/close-icon.png\";\nimport { removeQuote } from \"../../../store/actions/quotes\";\nimport { connect } from \"react-redux\";\n\nconst Container = styled.form`\n  position: absolute;\n  background: #00000050;\n  width: 100%;\n  height: 100vh;\n  top: 0;\n  left: 0;\n`;\n\nconst FlexStyled = styled(Flex)`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  width: 70%;\n  margin: 0 auto;\n  height: auto;\n  max-height: 70vh;\n  margin-top: calc(100vh - 85vh - 20px);\n  background: #fff;\n  border-radius: 4px;\n  padding: 20px;\n  border: 1px solid #999;\n  overflow: auto;\n  flex-direction: column;\n  gap: 100px;\n`;\n\nconst FlexCloseAndSave = styled(Flex)`\n  display: flex;\n  justify-content: flex-end;\n  flex-direction: column;\n`;\n\nconst LogoIcon = styled.img`\n  height: 20px;\n  width: 20px;\n  position: relative;\n  left: 80px;\n  cursor: pointer;\n`;\n\nconst StyledButton = styled(Button)`\n  background-color: #88b15a;\n  border: none;\n  color: ${Colors.white};\n  cursor: pointer;\n  font-size: ${Fonts.FontSize.medium};\n  font-weight: bold;\n  margin: 1em 0;\n  padding: 1em 2em;\n  border-radius: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst PopupTrash = (props) => {\n  const {\n    open,\n    onClose,\n    content,\n    handleSubmit,\n    removeQuote,\n    itemID,\n    reset,\n  } = props;\n\n  const onSubmit = (values) => {\n    onClose(false);\n\n    removeQuote(itemID);\n  };\n\n  return open ? (\n    <Container reset=\"popupTrashForm\">\n      {console.log(\"fff\", props)}\n      <FlexStyled>\n        <label>{content}</label>\n        <FlexCloseAndSave>\n          <StyledButton\n            type=\"submit\"\n            id=\"saveQuote\"\n            selfJustify=\"center\"\n            onClick={handleSubmit(onSubmit)}\n          >\n            {\"Yes\"}\n          </StyledButton>\n          <StyledButton\n            type=\"submit\"\n            id=\"saveQuote\"\n            selfJustify=\"center\"\n            onClick={() => onClose(false)}\n          >\n            {\"Close\"}\n          </StyledButton>\n        </FlexCloseAndSave>\n      </FlexStyled>\n    </Container>\n  ) : (\n    \"\"\n  );\n};\n\nconst mapStateToProps = (store) => {\n  return {\n    data: store.quotes.posts,\n  };\n};\nconst mapDispatchToProps = {\n  removeQuote,\n  reset,\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(\n  reduxForm({\n    // a unique name for the form\n    form: \"popupTrashForm\",\n  })(PopupTrash)\n);\n"]},"metadata":{},"sourceType":"module"}