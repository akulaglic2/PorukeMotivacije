{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport fatchLogin from \"../requests/users\";\n\nconst handleLogin = function* (action) {\n  const {\n    meta\n  } = action;\n\n  try {\n    const login = yield call(fatchLogin, action);\n    yield put({\n      type: \"LOGIN_SUCCESS\",\n      login: login,\n      meta\n    });\n    if (login !== 200) yield put({\n      type: \"LOGIN_ERROR\",\n      message: error.message,\n      error: true,\n      meta\n    });\n  } catch (error) {\n    yield put({\n      type: \"LOGIN_ERROR\",\n      message: error.message,\n      error: true,\n      meta\n    });\n  }\n};\n\nfunction* watcherLoginSaga() {\n  yield takeEvery(\"LOGIN_REQUESTED\", handleLogin);\n}\n\nexport default watcherLoginSaga;","map":{"version":3,"sources":["/Users/azraibric/Documents/PorukeMotivacije/src/store/sagas/handlers/users.js"],"names":["call","put","takeEvery","fatchLogin","handleLogin","action","meta","login","type","message","error","watcherLoginSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,WAAW,GAAG,WAAUC,MAAV,EAAkB;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,MAAjB;;AACA,MAAI;AACF,UAAME,KAAK,GAAG,MAAMP,IAAI,CAACG,UAAD,EAAaE,MAAb,CAAxB;AACA,UAAMJ,GAAG,CAAC;AAAEO,MAAAA,IAAI,EAAE,eAAR;AAAyBD,MAAAA,KAAK,EAAEA,KAAhC;AAAuCD,MAAAA;AAAvC,KAAD,CAAT;AACA,QAAIC,KAAK,KAAK,GAAd,EACE,MAAMN,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAE,aADE;AAERC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAFP;AAGRC,MAAAA,KAAK,EAAE,IAHC;AAIRJ,MAAAA;AAJQ,KAAD,CAAT;AAMH,GAVD,CAUE,OAAOI,KAAP,EAAc;AACd,UAAMT,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAE,aADE;AAERC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAFP;AAGRC,MAAAA,KAAK,EAAE,IAHC;AAIRJ,MAAAA;AAJQ,KAAD,CAAT;AAMD;AACF,CApBD;;AAsBA,UAAUK,gBAAV,GAA6B;AAC3B,QAAMT,SAAS,CAAC,iBAAD,EAAoBE,WAApB,CAAf;AACD;;AAED,eAAeO,gBAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\nimport fatchLogin from \"../requests/users\";\n\nconst handleLogin = function*(action) {\n  const { meta } = action;\n  try {\n    const login = yield call(fatchLogin, action);\n    yield put({ type: \"LOGIN_SUCCESS\", login: login, meta });\n    if (login !== 200)\n      yield put({\n        type: \"LOGIN_ERROR\",\n        message: error.message,\n        error: true,\n        meta,\n      });\n  } catch (error) {\n    yield put({\n      type: \"LOGIN_ERROR\",\n      message: error.message,\n      error: true,\n      meta,\n    });\n  }\n};\n\nfunction* watcherLoginSaga() {\n  yield takeEvery(\"LOGIN_REQUESTED\", handleLogin);\n}\n\nexport default watcherLoginSaga;\n"]},"metadata":{},"sourceType":"module"}