{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = require('./utils');\n\nvar middleware = function middleware() {\n  var responses = {};\n  return function (next) {\n    return function (action) {\n      var error = action.error,\n          payload = action.payload;\n\n      if ((0, _utils.isThunkAction)(action) && !(0, _utils.isCleanAction)(action)) {\n        if (!(0, _utils.hasKey)(action)) {\n          var thunk = (0, _utils.generateThunk)(action);\n          return new Promise(function (resolve, reject) {\n            responses[thunk.key] = function (err, response) {\n              return err ? reject(response) : resolve(response);\n            };\n\n            next((0, _utils.createThunkAction)(action, thunk));\n          });\n        }\n\n        var _getThunkMeta = (0, _utils.getThunkMeta)(action),\n            key = _getThunkMeta.key;\n\n        if (!responses[key]) {\n          throw new Error('[redux-saga-thunk] ' + (0, _utils.getThunkName)(action) + ' should be dispatched before ' + action.type);\n        }\n\n        responses[key](error, payload);\n        delete responses[key];\n        return next((0, _utils.createThunkAction)(action, (0, _utils.generateThunk)(action)));\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexports.default = middleware;","map":{"version":3,"sources":["/Users/azraibric/Documents/PorukeMotivacije/node_modules/redux-saga-thunk/dist/middleware.js"],"names":["Object","defineProperty","exports","value","_utils","require","middleware","responses","next","action","error","payload","isThunkAction","isCleanAction","hasKey","thunk","generateThunk","Promise","resolve","reject","key","err","response","createThunkAction","_getThunkMeta","getThunkMeta","Error","getThunkName","type","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIC,UAAU,GAAG,SAASA,UAAT,GAAsB;AACrC,MAAIC,SAAS,GAAG,EAAhB;AAEA,SAAO,UAAUC,IAAV,EAAgB;AACrB,WAAO,UAAUC,MAAV,EAAkB;AACvB,UAAIC,KAAK,GAAGD,MAAM,CAACC,KAAnB;AAAA,UACIC,OAAO,GAAGF,MAAM,CAACE,OADrB;;AAGA,UAAI,CAAC,GAAGP,MAAM,CAACQ,aAAX,EAA0BH,MAA1B,KAAqC,CAAC,CAAC,GAAGL,MAAM,CAACS,aAAX,EAA0BJ,MAA1B,CAA1C,EAA6E;AAC3E,YAAI,CAAC,CAAC,GAAGL,MAAM,CAACU,MAAX,EAAmBL,MAAnB,CAAL,EAAiC;AAC/B,cAAIM,KAAK,GAAG,CAAC,GAAGX,MAAM,CAACY,aAAX,EAA0BP,MAA1B,CAAZ;AACA,iBAAO,IAAIQ,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CZ,YAAAA,SAAS,CAACQ,KAAK,CAACK,GAAP,CAAT,GAAuB,UAAUC,GAAV,EAAeC,QAAf,EAAyB;AAC9C,qBAAOD,GAAG,GAAGF,MAAM,CAACG,QAAD,CAAT,GAAsBJ,OAAO,CAACI,QAAD,CAAvC;AACD,aAFD;;AAGAd,YAAAA,IAAI,CAAC,CAAC,GAAGJ,MAAM,CAACmB,iBAAX,EAA8Bd,MAA9B,EAAsCM,KAAtC,CAAD,CAAJ;AACD,WALM,CAAP;AAMD;;AAED,YAAIS,aAAa,GAAG,CAAC,GAAGpB,MAAM,CAACqB,YAAX,EAAyBhB,MAAzB,CAApB;AAAA,YACIW,GAAG,GAAGI,aAAa,CAACJ,GADxB;;AAGA,YAAI,CAACb,SAAS,CAACa,GAAD,CAAd,EAAqB;AACnB,gBAAM,IAAIM,KAAJ,CAAU,wBAAwB,CAAC,GAAGtB,MAAM,CAACuB,YAAX,EAAyBlB,MAAzB,CAAxB,GAA2D,+BAA3D,GAA6FA,MAAM,CAACmB,IAA9G,CAAN;AACD;;AAEDrB,QAAAA,SAAS,CAACa,GAAD,CAAT,CAAeV,KAAf,EAAsBC,OAAtB;AACA,eAAOJ,SAAS,CAACa,GAAD,CAAhB;AACA,eAAOZ,IAAI,CAAC,CAAC,GAAGJ,MAAM,CAACmB,iBAAX,EAA8Bd,MAA9B,EAAsC,CAAC,GAAGL,MAAM,CAACY,aAAX,EAA0BP,MAA1B,CAAtC,CAAD,CAAX;AACD;;AACD,aAAOD,IAAI,CAACC,MAAD,CAAX;AACD,KA3BD;AA4BD,GA7BD;AA8BD,CAjCD;;AAmCAP,OAAO,CAAC2B,OAAR,GAAkBvB,UAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = require('./utils');\n\nvar middleware = function middleware() {\n  var responses = {};\n\n  return function (next) {\n    return function (action) {\n      var error = action.error,\n          payload = action.payload;\n\n      if ((0, _utils.isThunkAction)(action) && !(0, _utils.isCleanAction)(action)) {\n        if (!(0, _utils.hasKey)(action)) {\n          var thunk = (0, _utils.generateThunk)(action);\n          return new Promise(function (resolve, reject) {\n            responses[thunk.key] = function (err, response) {\n              return err ? reject(response) : resolve(response);\n            };\n            next((0, _utils.createThunkAction)(action, thunk));\n          });\n        }\n\n        var _getThunkMeta = (0, _utils.getThunkMeta)(action),\n            key = _getThunkMeta.key;\n\n        if (!responses[key]) {\n          throw new Error('[redux-saga-thunk] ' + (0, _utils.getThunkName)(action) + ' should be dispatched before ' + action.type);\n        }\n\n        responses[key](error, payload);\n        delete responses[key];\n        return next((0, _utils.createThunkAction)(action, (0, _utils.generateThunk)(action)));\n      }\n      return next(action);\n    };\n  };\n};\n\nexports.default = middleware;"]},"metadata":{},"sourceType":"script"}