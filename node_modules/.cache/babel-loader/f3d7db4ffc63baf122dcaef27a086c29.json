{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport fatchLogin from \"../requests/users\";\n\nconst handleLogin = function* (action) {\n  const {\n    meta\n  } = action;\n\n  try {\n    const login = yield call(fatchLogin, action);\n    const result = yield put({\n      type: \"LOGIN_SUCCESS\",\n      login: login,\n      meta\n    });\n    console.log(\"fff\", login);\n  } catch (error) {\n    yield put({\n      type: \"LOGIN_ERROR\",\n      message: error.message,\n      error: true,\n      meta\n    });\n  }\n};\n\nfunction* watcherLoginSaga() {\n  yield takeEvery(\"LOGIN_REQUESTED\", handleLogin);\n}\n\nexport default watcherLoginSaga;","map":{"version":3,"sources":["/Users/azraibric/Documents/PorukeMotivacije/src/store/sagas/handlers/users.js"],"names":["call","put","takeEvery","fatchLogin","handleLogin","action","meta","login","result","type","console","log","error","message","watcherLoginSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,WAAW,GAAG,WAAUC,MAAV,EAAkB;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,MAAjB;;AACA,MAAI;AACF,UAAME,KAAK,GAAG,MAAMP,IAAI,CAACG,UAAD,EAAaE,MAAb,CAAxB;AACA,UAAMG,MAAM,GAAG,MAAMP,GAAG,CAAC;AAAEQ,MAAAA,IAAI,EAAE,eAAR;AAAyBF,MAAAA,KAAK,EAAEA,KAAhC;AAAuCD,MAAAA;AAAvC,KAAD,CAAxB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,KAAnB;AACD,GAJD,CAIE,OAAOK,KAAP,EAAc;AACd,UAAMX,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,aADE;AAERI,MAAAA,OAAO,EAAED,KAAK,CAACC,OAFP;AAGRD,MAAAA,KAAK,EAAE,IAHC;AAIRN,MAAAA;AAJQ,KAAD,CAAT;AAMD;AACF,CAdD;;AAgBA,UAAUQ,gBAAV,GAA6B;AAC3B,QAAMZ,SAAS,CAAC,iBAAD,EAAoBE,WAApB,CAAf;AACD;;AAED,eAAeU,gBAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\nimport fatchLogin from \"../requests/users\";\n\nconst handleLogin = function*(action) {\n  const { meta } = action;\n  try {\n    const login = yield call(fatchLogin, action);\n    const result = yield put({ type: \"LOGIN_SUCCESS\", login: login, meta });\n    console.log(\"fff\", login);\n  } catch (error) {\n    yield put({\n      type: \"LOGIN_ERROR\",\n      message: error.message,\n      error: true,\n      meta,\n    });\n  }\n};\n\nfunction* watcherLoginSaga() {\n  yield takeEvery(\"LOGIN_REQUESTED\", handleLogin);\n}\n\nexport default watcherLoginSaga;\n"]},"metadata":{},"sourceType":"module"}