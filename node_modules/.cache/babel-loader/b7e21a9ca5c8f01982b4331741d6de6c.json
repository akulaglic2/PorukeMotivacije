{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport fatchLogin from \"../requests/users\";\n\nconst handleLogin = function* (action) {\n  const {\n    meta\n  } = action;\n\n  try {\n    const login = yield call(fatchLogin, action);\n    console.log(\"fffffff\", !login.error);\n    if (login.error) yield put({\n      type: \"LOGIN_ERROR\",\n      message: error.message,\n      error: true,\n      meta\n    });else yield put({\n      type: \"LOGIN_SUCCESS\",\n      login: login,\n      meta\n    });\n  } catch (error) {\n    yield put({\n      type: \"LOGIN_ERROR\",\n      message: error.message,\n      error: true,\n      meta\n    });\n  }\n};\n\nfunction* watcherLoginSaga() {\n  yield takeEvery(\"LOGIN_REQUESTED\", handleLogin);\n}\n\nexport default watcherLoginSaga;","map":{"version":3,"sources":["/Users/azraibric/Documents/PorukeMotivacije/src/store/sagas/handlers/users.js"],"names":["call","put","takeEvery","fatchLogin","handleLogin","action","meta","login","console","log","error","type","message","watcherLoginSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,WAAW,GAAG,WAAUC,MAAV,EAAkB;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,MAAjB;;AACA,MAAI;AACF,UAAME,KAAK,GAAG,MAAMP,IAAI,CAACG,UAAD,EAAaE,MAAb,CAAxB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,CAACF,KAAK,CAACG,KAA9B;AACA,QAAIH,KAAK,CAACG,KAAV,EACE,MAAMT,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAE,aADE;AAERC,MAAAA,OAAO,EAAEF,KAAK,CAACE,OAFP;AAGRF,MAAAA,KAAK,EAAE,IAHC;AAIRJ,MAAAA;AAJQ,KAAD,CAAT,CADF,KAOK,MAAML,GAAG,CAAC;AAAEU,MAAAA,IAAI,EAAE,eAAR;AAAyBJ,MAAAA,KAAK,EAAEA,KAAhC;AAAuCD,MAAAA;AAAvC,KAAD,CAAT;AACN,GAXD,CAWE,OAAOI,KAAP,EAAc;AACd,UAAMT,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAE,aADE;AAERC,MAAAA,OAAO,EAAEF,KAAK,CAACE,OAFP;AAGRF,MAAAA,KAAK,EAAE,IAHC;AAIRJ,MAAAA;AAJQ,KAAD,CAAT;AAMD;AACF,CArBD;;AAuBA,UAAUO,gBAAV,GAA6B;AAC3B,QAAMX,SAAS,CAAC,iBAAD,EAAoBE,WAApB,CAAf;AACD;;AAED,eAAeS,gBAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\nimport fatchLogin from \"../requests/users\";\n\nconst handleLogin = function*(action) {\n  const { meta } = action;\n  try {\n    const login = yield call(fatchLogin, action);\n    console.log(\"fffffff\", !login.error);\n    if (login.error)\n      yield put({\n        type: \"LOGIN_ERROR\",\n        message: error.message,\n        error: true,\n        meta,\n      });\n    else yield put({ type: \"LOGIN_SUCCESS\", login: login, meta });\n  } catch (error) {\n    yield put({\n      type: \"LOGIN_ERROR\",\n      message: error.message,\n      error: true,\n      meta,\n    });\n  }\n};\n\nfunction* watcherLoginSaga() {\n  yield takeEvery(\"LOGIN_REQUESTED\", handleLogin);\n}\n\nexport default watcherLoginSaga;\n"]},"metadata":{},"sourceType":"module"}