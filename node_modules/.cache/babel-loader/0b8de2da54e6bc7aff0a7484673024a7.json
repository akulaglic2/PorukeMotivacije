{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clean = clean;\nvar PREFIX = '@@redux-saga-thunk/';\nvar CLEAN = exports.CLEAN = PREFIX + 'clean';\n/**\n * Clean state\n * @example\n * const mapDispatchToProps = (dispatch, ownProps) => ({\n *   cleanFetchUserStateForAllIds: () => dispatch(clean('FETCH_USER')),\n *   cleanFetchUserStateForSpecifiedId: () => dispatch(clean('FETCH_USER', ownProps.id)),\n *   cleanFetchUsersState: () => dispatch(clean('FETCH_USERS')),\n * })\n */\n// eslint-disable-next-line import/prefer-default-export\n\nfunction clean(name, id) {\n  return {\n    type: CLEAN,\n    meta: {\n      thunk: arguments.length > 1 ? {\n        name: name,\n        id: id\n      } : {\n        name: name\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/Users/azraibric/Documents/PorukeMotivacije/node_modules/redux-saga-thunk/dist/actions.js"],"names":["Object","defineProperty","exports","value","clean","PREFIX","CLEAN","name","id","type","meta","thunk","arguments","length"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,KAAR,GAAgBA,KAAhB;AACA,IAAIC,MAAM,GAAG,qBAAb;AAEA,IAAIC,KAAK,GAAGJ,OAAO,CAACI,KAAR,GAAgBD,MAAM,GAAG,OAArC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,KAAT,CAAeG,IAAf,EAAqBC,EAArB,EAAyB;AACvB,SAAO;AACLC,IAAAA,IAAI,EAAEH,KADD;AAELI,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAEC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuB;AAAEN,QAAAA,IAAI,EAAEA,IAAR;AAAcC,QAAAA,EAAE,EAAEA;AAAlB,OAAvB,GAAgD;AAAED,QAAAA,IAAI,EAAEA;AAAR;AADnD;AAFD,GAAP;AAMD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clean = clean;\nvar PREFIX = '@@redux-saga-thunk/';\n\nvar CLEAN = exports.CLEAN = PREFIX + 'clean';\n\n/**\n * Clean state\n * @example\n * const mapDispatchToProps = (dispatch, ownProps) => ({\n *   cleanFetchUserStateForAllIds: () => dispatch(clean('FETCH_USER')),\n *   cleanFetchUserStateForSpecifiedId: () => dispatch(clean('FETCH_USER', ownProps.id)),\n *   cleanFetchUsersState: () => dispatch(clean('FETCH_USERS')),\n * })\n */\n// eslint-disable-next-line import/prefer-default-export\nfunction clean(name, id) {\n  return {\n    type: CLEAN,\n    meta: {\n      thunk: arguments.length > 1 ? { name: name, id: id } : { name: name }\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}