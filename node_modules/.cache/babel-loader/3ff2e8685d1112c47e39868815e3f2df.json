{"ast":null,"code":"var _jsxFileName = \"/Users/azraibric/Documents/PorukeMotivacije/src/pages/LoginForm/index.js\";\nimport React, { useState } from \"react\";\nimport { Button, styled } from \"reakit\";\nimport { Colors, Size, Fonts, style } from \"../../assets/common/Styles\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport MainPage from \"../Root/MainPage\";\nimport Home from \"../Home\";\nimport { Field, formValues, reduxForm } from \"redux-form\";\nimport { isValid as isFormValid, submit as submitForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport Input from \"../../components/Input\";\nimport Notification from \"../../components/Notification\";\nimport { isLogged } from \"../../store/actions/isLogged\";\nimport { userLogin } from \"../../store/actions/user\";\nimport { validateLogin } from \"../../assets/utils/validate\";\nimport { validate } from \"../../assets/utils/validate\";\nimport { SubmissionError } from \"redux-form\";\nimport { Component } from \"react\";\nconst Wrapper = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: 100px;\n  gap: 20px;\n`;\nconst StyledButton = styled(Button)`\n  background-color: #88b15a;\n  border: none;\n  color: ${Colors.white};\n  cursor: pointer;\n  font-size: ${Fonts.FontSize.medium};\n  font-weight: bold;\n  margin: 1em 0;\n  padding: 1em 2em;\n  border-radius: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst FormHeader = styled.p`\n  font-size: ${Fonts.FontSize.large};\n  font-weight: bold;\n  text-align: start;\n`;\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      history: useHistory(),\n      isOpen: false,\n      isLoading: false\n    };\n\n    this.onSubmit = values => {\n      const {\n        submitForm,\n        isLogged,\n        handleSubmit,\n        userLogin\n      } = this.props;\n\n      if (values) {\n        this.setState({\n          isLoading: true\n        });\n        return userLogin({\n          username: values.username,\n          password: values.password\n        }).then(() => {\n          const {\n            history\n          } = this.props;\n\n          if (!this.unmounted) {\n            setIsLoading(false);\n            history.push(`/`);\n          }\n        }).catch(error => {\n          setIsLoading(false);\n          throw new SubmissionError({\n            _error: error.message.map(message => message.title)\n          });\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      onSubmit: handleSubmit(onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Field, {\n      key: \"username\",\n      name: \"username\",\n      component: Input,\n      type: \"input\",\n      label: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      key: \"password\",\n      name: \"password\",\n      component: Input,\n      type: \"input\",\n      label: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(StyledButton, {\n      type: \"submit\",\n      id: \"tInviteToCL.cancel\",\n      selfJustify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(Notification, {\n      message: \"error\",\n      show: true,\n      onClose: setIsOpen,\n      type: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.data.posts\n  };\n};\n\nconst mapDispatchToProps = {\n  submitForm,\n  isLogged,\n  userLogin\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  // a unique name for the form\n  form: \"loginForm\",\n  validate: validateLogin\n})(LoginForm));","map":{"version":3,"sources":["/Users/azraibric/Documents/PorukeMotivacije/src/pages/LoginForm/index.js"],"names":["React","useState","Button","styled","Colors","Size","Fonts","style","Redirect","Route","Switch","useHistory","MainPage","Home","Field","formValues","reduxForm","isValid","isFormValid","submit","submitForm","connect","Input","Notification","isLogged","userLogin","validateLogin","validate","SubmissionError","Component","Wrapper","form","StyledButton","white","FontSize","medium","FormHeader","p","large","LoginForm","state","history","isOpen","isLoading","onSubmit","values","handleSubmit","props","setState","username","password","then","unmounted","setIsLoading","push","catch","error","_error","message","map","title","render","setIsOpen","mapStateToProps","posts","data","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, styled } from \"reakit\";\nimport { Colors, Size, Fonts, style } from \"../../assets/common/Styles\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport MainPage from \"../Root/MainPage\";\nimport Home from \"../Home\";\n\nimport { Field, formValues, reduxForm } from \"redux-form\";\nimport { isValid as isFormValid, submit as submitForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport Input from \"../../components/Input\";\nimport Notification from \"../../components/Notification\";\nimport { isLogged } from \"../../store/actions/isLogged\";\nimport { userLogin } from \"../../store/actions/user\";\nimport { validateLogin } from \"../../assets/utils/validate\";\nimport { validate } from \"../../assets/utils/validate\";\nimport { SubmissionError } from \"redux-form\";\nimport { Component } from \"react\";\nconst Wrapper = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: 100px;\n  gap: 20px;\n`;\n\nconst StyledButton = styled(Button)`\n  background-color: #88b15a;\n  border: none;\n  color: ${Colors.white};\n  cursor: pointer;\n  font-size: ${Fonts.FontSize.medium};\n  font-weight: bold;\n  margin: 1em 0;\n  padding: 1em 2em;\n  border-radius: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst FormHeader = styled.p`\n  font-size: ${Fonts.FontSize.large};\n  font-weight: bold;\n  text-align: start;\n`;\n\nclass LoginForm extends Component {\n  state = {\n    history: useHistory(),\n    isOpen: false,\n    isLoading: false,\n  };\n\n  onSubmit = (values) => {\n    const { submitForm, isLogged, handleSubmit, userLogin } = this.props;\n    if (values) {\n      this.setState({ isLoading: true });\n      return userLogin({\n        username: values.username,\n        password: values.password,\n      })\n        .then(() => {\n          const { history } = this.props;\n          if (!this.unmounted) {\n            setIsLoading(false);\n            history.push(`/`);\n          }\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          throw new SubmissionError({\n            _error: error.message.map((message) => message.title),\n          });\n        });\n    }\n  };\n  render() {\n    return (\n      <Wrapper onSubmit={handleSubmit(onSubmit)}>\n        <FormHeader>Login</FormHeader>\n        <Field\n          key={\"username\"}\n          name=\"username\"\n          component={Input}\n          type=\"input\"\n          label={\"Name\"}\n        />\n        <Field\n          key={\"password\"}\n          name=\"password\"\n          component={Input}\n          type=\"input\"\n          label={\"Password\"}\n        />\n        <StyledButton\n          type=\"submit\"\n          id=\"tInviteToCL.cancel\"\n          selfJustify=\"center\"\n        >\n          {\"Submit\"}\n        </StyledButton>\n        <Notification\n          message={\"error\"}\n          show={true}\n          onClose={setIsOpen}\n          type={\"error\"}\n        ></Notification>\n      </Wrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.data.posts,\n  };\n};\nconst mapDispatchToProps = {\n  submitForm,\n  isLogged,\n  userLogin,\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(\n  reduxForm({\n    // a unique name for the form\n    form: \"loginForm\",\n    validate: validateLogin,\n  })(LoginForm)\n);\n"]},"metadata":{},"sourceType":"module"}