{"ast":null,"code":"var _jsxFileName = \"/Users/azraibric/Documents/PorukeMotivacije/src/pages/LoginForm/index.js\";\nimport React, { useState } from \"react\";\nimport { Button, styled } from \"reakit\";\nimport { Colors, Size, Fonts, style } from \"../../assets/common/Styles\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport MainPage from \"../Root/MainPage\";\nimport Home from \"../Home\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { isValid as isFormValid, submit as submitForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport Input from \"../../components/Input\";\nimport Notification from \"../../components/Notification\";\nimport { isLogged } from \"../../store/actions/isLogged\";\nimport { userLogin } from \"../../store/actions/user\";\nconst Wrapper = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: 100px;\n  gap: 20px;\n`;\nconst StyledButton = styled(Button)`\n  background-color: #88b15a;\n  border: none;\n  color: ${Colors.white};\n  cursor: pointer;\n  font-size: ${Fonts.FontSize.medium};\n  font-weight: bold;\n  margin: 1em 0;\n  padding: 1em 2em;\n  border-radius: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst FormHeader = styled.p`\n  font-size: ${Fonts.FontSize.large};\n  font-weight: bold;\n  text-align: start;\n`;\n\nconst LoginForm = props => {\n  const {\n    submitForm,\n    isLogged\n  } = props;\n  const history = useHistory();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const routeChange = () => {\n    history.push(`/`);\n    isLogged();\n    console.log(\"fffazra\", props);\n  };\n\n  const handleSubmit = values => {\n    if (values) {\n      return userLogin({\n        login: values.username,\n        password: values.password\n      }).then(() => {}).catch(error => {});\n    }\n  };\n\n  {\n    console.log(\"fff\", props);\n  }\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Field, {\n    key: \"username\",\n    name: \"username\",\n    component: Input,\n    type: \"input\",\n    label: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    key: \"password\",\n    name: \"password\",\n    component: Input,\n    type: \"input\",\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StyledButton, {\n    type: \"button\",\n    onClick: routeChange,\n    id: \"tInviteToCL.cancel\",\n    selfJustify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Notification, {\n    message: \"error\",\n    show: true,\n    onClose: setIsOpen,\n    type: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.data.posts\n  };\n};\n\nconst mapDispatchToProps = {\n  submitForm,\n  isLogged,\n  userLogin\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  // a unique name for the form\n  form: \"loginForm\"\n})(LoginForm));","map":{"version":3,"sources":["/Users/azraibric/Documents/PorukeMotivacije/src/pages/LoginForm/index.js"],"names":["React","useState","Button","styled","Colors","Size","Fonts","style","Redirect","Route","Switch","useHistory","MainPage","Home","Field","reduxForm","isValid","isFormValid","submit","submitForm","connect","Input","Notification","isLogged","userLogin","Wrapper","form","StyledButton","white","FontSize","medium","FormHeader","p","large","LoginForm","props","history","isOpen","setIsOpen","routeChange","push","console","log","handleSubmit","values","login","username","password","then","catch","error","mapStateToProps","state","posts","data","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, styled } from \"reakit\";\nimport { Colors, Size, Fonts, style } from \"../../assets/common/Styles\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport MainPage from \"../Root/MainPage\";\nimport Home from \"../Home\";\n\nimport { Field, reduxForm } from \"redux-form\";\nimport { isValid as isFormValid, submit as submitForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport Input from \"../../components/Input\";\nimport Notification from \"../../components/Notification\";\nimport { isLogged } from \"../../store/actions/isLogged\";\nimport { userLogin } from \"../../store/actions/user\";\n\nconst Wrapper = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: 100px;\n  gap: 20px;\n`;\n\nconst StyledButton = styled(Button)`\n  background-color: #88b15a;\n  border: none;\n  color: ${Colors.white};\n  cursor: pointer;\n  font-size: ${Fonts.FontSize.medium};\n  font-weight: bold;\n  margin: 1em 0;\n  padding: 1em 2em;\n  border-radius: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst FormHeader = styled.p`\n  font-size: ${Fonts.FontSize.large};\n  font-weight: bold;\n  text-align: start;\n`;\n\nconst LoginForm = (props) => {\n  const { submitForm, isLogged } = props;\n  const history = useHistory();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const routeChange = () => {\n    history.push(`/`);\n    isLogged();\n    console.log(\"fffazra\", props);\n  };\n\n  const handleSubmit = (values) => {\n    if (values) {\n      return userLogin({\n        login: values.username,\n        password: values.password,\n      })\n        .then(() => {})\n        .catch((error) => {});\n    }\n  };\n  {\n    console.log(\"fff\", props);\n  }\n  return (\n    <Wrapper onSubmit={handleSubmit}>\n      <FormHeader>Login</FormHeader>\n      <Field\n        key={\"username\"}\n        name=\"username\"\n        component={Input}\n        type=\"input\"\n        label={\"Name\"}\n      />\n      <Field\n        key={\"password\"}\n        name=\"password\"\n        component={Input}\n        type=\"input\"\n        label={\"Password\"}\n      />\n      <StyledButton\n        type=\"button\"\n        onClick={routeChange}\n        id=\"tInviteToCL.cancel\"\n        selfJustify=\"center\"\n      >\n        {\"Submit\"}\n      </StyledButton>\n      <Notification\n        message={\"error\"}\n        show={true}\n        onClose={setIsOpen}\n        type={\"error\"}\n      ></Notification>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.data.posts,\n  };\n};\nconst mapDispatchToProps = {\n  submitForm,\n  isLogged,\n  userLogin,\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(\n  reduxForm({\n    // a unique name for the form\n    form: \"loginForm\",\n  })(LoginForm)\n);\n"]},"metadata":{},"sourceType":"module"}