{"ast":null,"code":"export function omit(object) {\n  var keys = Object.keys(object);\n  var result = {};\n\n  for (var _len = arguments.length, paths = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    paths[_key - 1] = arguments[_key];\n  }\n\n  for (var i = 0; i < keys.length; i += 1) {\n    var key = keys[i];\n\n    if (paths.indexOf(key) === -1) {\n      result[key] = object[key];\n    }\n  }\n\n  return result;\n}\nexport function toArray(arg) {\n  if (typeof arg === \"undefined\") return [];\n  return Array.isArray(arg) ? arg : [arg];\n}","map":{"version":3,"sources":["/Users/azraibric/Documents/poruke-admin/node_modules/reuse/dist/es/utils.js"],"names":["omit","object","keys","Object","result","_len","arguments","length","paths","Array","_key","i","key","indexOf","toArray","arg","isArray"],"mappings":"AAAA,OAAO,SAASA,IAAT,CAAcC,MAAd,EAAsB;AAC3B,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,MAAZ,CAAX;AACA,MAAIG,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAArC,EAAyEK,IAAI,GAAG,CAArF,EAAwFA,IAAI,GAAGL,IAA/F,EAAqGK,IAAI,EAAzG,EAA6G;AAC3GF,IAAAA,KAAK,CAACE,IAAI,GAAG,CAAR,CAAL,GAAkBJ,SAAS,CAACI,IAAD,CAA3B;AACD;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAAI,CAACK,MAAzB,EAAiCI,CAAC,IAAI,CAAtC,EAAyC;AACvC,QAAIC,GAAG,GAAGV,IAAI,CAACS,CAAD,CAAd;;AAEA,QAAIH,KAAK,CAACK,OAAN,CAAcD,GAAd,MAAuB,CAAC,CAA5B,EAA+B;AAC7BR,MAAAA,MAAM,CAACQ,GAAD,CAAN,GAAcX,MAAM,CAACW,GAAD,CAApB;AACD;AACF;;AAED,SAAOR,MAAP;AACD;AACD,OAAO,SAASU,OAAT,CAAiBC,GAAjB,EAAsB;AAC3B,MAAI,OAAOA,GAAP,KAAe,WAAnB,EAAgC,OAAO,EAAP;AAChC,SAAON,KAAK,CAACO,OAAN,CAAcD,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD,CAAlC;AACD","sourcesContent":["export function omit(object) {\n  var keys = Object.keys(object);\n  var result = {};\n\n  for (var _len = arguments.length, paths = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    paths[_key - 1] = arguments[_key];\n  }\n\n  for (var i = 0; i < keys.length; i += 1) {\n    var key = keys[i];\n\n    if (paths.indexOf(key) === -1) {\n      result[key] = object[key];\n    }\n  }\n\n  return result;\n}\nexport function toArray(arg) {\n  if (typeof arg === \"undefined\") return [];\n  return Array.isArray(arg) ? arg : [arg];\n}"]},"metadata":{},"sourceType":"module"}