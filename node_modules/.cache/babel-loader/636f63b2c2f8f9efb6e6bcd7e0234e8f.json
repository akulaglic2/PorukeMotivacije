{"ast":null,"code":"var __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n};\n\nimport { breakpoints } from \"../media\";\nimport map from \"./map\";\nimport resolve from \"./resolve\";\nexport default (function (valueMap, renderer, theme) {\n  var breakpointsMap = breakpoints(theme);\n  var breakpointValues = map(valueMap, theme) || {};\n  var breakpointKeys = Object.keys(breakpointValues).filter(function (breakpointKey) {\n    return breakpointsMap[breakpointKey] != null && typeof breakpointValues[breakpointKey] === \"object\";\n  });\n  var propertyKeys = Object.keys(valueMap).filter(function (propertyKey) {\n    return renderer[propertyKey] != null;\n  });\n  var previousValues = {};\n  var count = 0;\n  return breakpointKeys.reduce(function (acc, breakpointKey) {\n    count++;\n    return acc + resolve(breakpointsMap, breakpointKey)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n        \", \"\\n      \"], [\"\\n        \", \"\\n      \"])), propertyKeys.reduce(function (acc2, propertyKey) {\n      var value = breakpointValues[breakpointKey] && breakpointValues[breakpointKey][propertyKey];\n\n      if (count > 1 && previousValues[propertyKey] === value) {\n        return acc2;\n      } else {\n        previousValues[propertyKey] = value;\n        return acc2 + renderer[propertyKey](value);\n      }\n    }, \"\"));\n  }, \"\");\n});\nvar templateObject_1;","map":{"version":3,"sources":["../../src/utils/render.ts"],"names":[],"mappings":";;AAAA,IAAA,MAEE,CAAA,cAFF,CAKC,MALD,EAKO,KALP,EAKkB;AAAA,MAAA,KAAA,EAAA;AAAA,KALlB;AAOA,G,MAAU;AAEV,IAAA,MAAO,CAAA,GAAP,GAAc,GAAd;AAEA;;AAKE,SAAM,MAAN;AACA,C;;AACA,SAAM,WAAN,QAAuB,UAAvB;OAEI,G,MAAA,O;OACA,O,MAAO,W;AADP,gBAEF,UAAA,QAAA,EAAA,QAAA,EAAA,KAAA,EAAA;AACF,MAAA,cAAkB,GAAG,WAAW,CAAC,KAAD,CAAhC;AAGA,MAAA,gBAAoB,GAAmB,GAAG,CAAA,QAAA,EAAA,KAAA,CAAH,IAAG,EAA1C;AACA,MAAA,cAAc,GAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,EAAA,MAAA,CAAA,UAEd,aAFc,EAGZ;AAEA,WAeU,cAAA,CAZJ,aAYI,CAAA,IAZQ,IAYR,IAXJ,OAAA,gBACE,CAAA,aAAA,CADF,KACmB,QALzB;AAQM,GAbM,CAAd;MAcU,YAAA,GAAA,MAAW,CAAC,IAAZ,CAAY,QAAZ,EAAY,MAAZ,CAAY,UAAA,WAAA,EAAA;WACb,QAAA,CAAA,WAAA,CAAA,IAAA,I;AAAM,GADL,C;MAEA,cAAA,GAAA,E;cAEA,C;SACD,cAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,aAAA,EAAA;AACH,IAAA,KAAC;AAGP,WACA,GAAA,G;;;;;;;;;WADA;GAJS,E,EAAA,C;CA1BL","sourceRoot":"","sourcesContent":["var __makeTemplateObject =\n  (this && this.__makeTemplateObject) ||\n  function(cooked, raw) {\n    if (Object.defineProperty) {\n      Object.defineProperty(cooked, \"raw\", { value: raw });\n    } else {\n      cooked.raw = raw;\n    }\n    return cooked;\n  };\nimport { breakpoints } from \"../media\";\nimport map from \"./map\";\nimport resolve from \"./resolve\";\nexport default (function(valueMap, renderer, theme) {\n  var breakpointsMap = breakpoints(theme);\n  var breakpointValues = map(valueMap, theme) || {};\n  var breakpointKeys = Object.keys(breakpointValues).filter(function(\n    breakpointKey\n  ) {\n    return (\n      breakpointsMap[breakpointKey] != null &&\n      typeof breakpointValues[breakpointKey] === \"object\"\n    );\n  });\n  var propertyKeys = Object.keys(valueMap).filter(function(propertyKey) {\n    return renderer[propertyKey] != null;\n  });\n  var previousValues = {};\n  var count = 0;\n  return breakpointKeys.reduce(function(acc, breakpointKey) {\n    count++;\n    return (\n      acc +\n      resolve(breakpointsMap, breakpointKey)(\n        templateObject_1 ||\n          (templateObject_1 = __makeTemplateObject(\n            [\"\\n        \", \"\\n      \"],\n            [\"\\n        \", \"\\n      \"]\n          )),\n        propertyKeys.reduce(function(acc2, propertyKey) {\n          var value =\n            breakpointValues[breakpointKey] &&\n            breakpointValues[breakpointKey][propertyKey];\n          if (count > 1 && previousValues[propertyKey] === value) {\n            return acc2;\n          } else {\n            previousValues[propertyKey] = value;\n            return acc2 + renderer[propertyKey](value);\n          }\n        }, \"\")\n      )\n    );\n  }, \"\");\n});\nvar templateObject_1;\n//# sourceMappingURL=render.js.map\n"]},"metadata":{},"sourceType":"module"}