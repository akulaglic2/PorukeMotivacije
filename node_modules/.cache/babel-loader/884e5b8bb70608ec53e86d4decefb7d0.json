{"ast":null,"code":"import validateForm from \"validate.js\";\nconst regexPattern = {\n  GENERAL_INPUT: /^[^(?=.*[!@#$%^&*“'\\\\[\\\\\\]\\\\{\\\\}<>\\\\(\\\\)=\\\\\\\\\\\\-_´+`~\\\\:;,\\\\.€\\\\|\\]\\)[0-9\\]][_ / a-zA-Z\\u0400-\\u04FF\\u00c0-\\u00FF\\u0100-\\u017F\\u0218-\\u021B- ]{0,50}$/\n};\nvar constraints = {\n  first_name: {\n    presence: {\n      allowEmpty: false\n    },\n    format: {\n      scriptDependent: true,\n      pattern: regexPattern.GENERAL_INPUT\n    }\n  },\n  last_name: {\n    presence: {\n      allowEmpty: false\n    },\n    format: {\n      scriptDependent: true,\n      pattern: regexPattern.GENERAL_INPUT\n    }\n  },\n  email: {\n    presence: {\n      allowEmpty: false\n    },\n    email: true\n  },\n  emailOrPhoneNumber: {\n    presence: {\n      allowEmpty: false\n    },\n    emailOrPhoneNumber: true\n  },\n  password: {\n    presence: {\n      allowEmpty: false\n    },\n    length: {\n      minimum: 6\n    }\n  },\n  confirm_password: {\n    presence: {\n      allowEmpty: false\n    },\n    length: {\n      minimum: 6\n    },\n    equality: \"password\"\n  },\n  city: {\n    select: true,\n    presence: {\n      allowEmpty: false\n    }\n  },\n  address: {\n    russianAddress: \"some options\",\n    presence: {\n      allowEmpty: false\n    }\n  },\n  birth_date: {\n    presence: {\n      allowEmpty: false\n    }\n  }\n};\n\nconst _validate = (values, constraints) => {\n  var errors = validateForm(values, constraints);\n  return errors || null;\n};\n\nconst validateLogin = (values, props) => {\n  let v;\n  v = _validate({ ...values,\n    countryIsoCode2: props.intl && props.intl.locale,\n    prefixValue: null,\n    hasPrefixField: false\n  }, {\n    emailOrPhoneNumber: constraints.emailOrPhoneNumber,\n    password: constraints.password\n  });\n  return v;\n};\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"unesi usename polje\";\n  }\n\n  if (!formValues.password) {\n    errors.password = \"unesi password polje\";\n  }\n\n  return errors;\n};\n\nexport { validate, validateLogin };","map":{"version":3,"sources":["/Users/azraibric/Documents/PorukeMotivacije/src/assets/utils/validate.js"],"names":["validateForm","regexPattern","GENERAL_INPUT","constraints","first_name","presence","allowEmpty","format","scriptDependent","pattern","last_name","email","emailOrPhoneNumber","password","length","minimum","confirm_password","equality","city","select","address","russianAddress","birth_date","_validate","values","errors","validateLogin","props","v","countryIsoCode2","intl","locale","prefixValue","hasPrefixField","validate","formValues","username"],"mappings":"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","sourcesContent":["import validateForm from \"validate.js\";\n\nconst regexPattern = {\n  GENERAL_INPUT: /^[^(?=.*[!@#$%^&*“'\\\\[\\\\\\]\\\\{\\\\}<>\\\\(\\\\)=\\\\\\\\\\\\-_´+`~\\\\:;,\\\\.€\\\\|\\]\\)[0-9\\]][_ / a-zA-Z\\u0400-\\u04FF\\u00c0-\\u00FF\\u0100-\\u017F\\u0218-\\u021B- ]{0,50}$/,\n};\n\nvar constraints = {\n  first_name: {\n    presence: {\n      allowEmpty: false,\n    },\n    format: {\n      scriptDependent: true,\n      pattern: regexPattern.GENERAL_INPUT,\n    },\n  },\n  last_name: {\n    presence: {\n      allowEmpty: false,\n    },\n    format: {\n      scriptDependent: true,\n      pattern: regexPattern.GENERAL_INPUT,\n    },\n  },\n  email: {\n    presence: {\n      allowEmpty: false,\n    },\n    email: true,\n  },\n  emailOrPhoneNumber: {\n    presence: {\n      allowEmpty: false,\n    },\n    emailOrPhoneNumber: true,\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n    },\n    length: {\n      minimum: 6,\n    },\n  },\n  confirm_password: {\n    presence: {\n      allowEmpty: false,\n    },\n    length: {\n      minimum: 6,\n    },\n    equality: \"password\",\n  },\n  city: {\n    select: true,\n    presence: {\n      allowEmpty: false,\n    },\n  },\n  address: {\n    russianAddress: \"some options\",\n    presence: {\n      allowEmpty: false,\n    },\n  },\n  birth_date: {\n    presence: {\n      allowEmpty: false,\n    },\n  },\n};\n\nconst _validate = (values, constraints) => {\n  var errors = validateForm(values, constraints);\n\n  return errors || null;\n};\n\nconst validateLogin = (values, props) => {\n  let v;\n  v = _validate(\n    {\n      ...values,\n      countryIsoCode2: props.intl && props.intl.locale,\n      prefixValue: null,\n      hasPrefixField: false,\n    },\n    {\n      emailOrPhoneNumber: constraints.emailOrPhoneNumber,\n      password: constraints.password,\n    }\n  );\n  return v;\n};\n\nconst validate = (formValues) => {\n  const errors = {};\n  if (!formValues.username) {\n    errors.username = \"unesi usename polje\";\n  }\n  if (!formValues.password) {\n    errors.password = \"unesi password polje\";\n  }\n  return errors;\n};\n\nexport { validate, validateLogin };\n"]},"metadata":{},"sourceType":"module"}