{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\nimport * as all from \"./reducers\";\nimport { reducer as formReducer } from \"redux-form\";\nimport isLogged from \"./reducers/isLogged\";\nimport user from \"./reducers/user\";\nimport quotes from \"./reducers/quotes\";\nimport categories from \"./reducers/categories\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas\";\nconst sagaMiddleware = createSagaMiddleware({\n  onError: e => {\n    console.log(\"Redux Saga Error : ----------------------\");\n    console.log(e.message);\n    throw e;\n  }\n});\nconst rootReducer = combineReducers({\n  logged: isLogged,\n  user: user,\n  quotes: quotes,\n  categories: categories,\n  form: formReducer\n});\n\nconst resettableAppReducer = (state, action) => rootReducer(action.type !== RESET_STATE ? state : {\n  countries: state.countries\n}, action);\n\nconst store = createStore(resettableAppReducer, composeWithDevTools(applyMiddleware(thunkMiddleware, sagaMiddleware) // other store enhancers if any\n));\nsagaMiddleware.run(rootSaga).done.catch(err => {\n  console.log({\n    message: err.message,\n    source: \"sagaError\",\n    stacktrace: err.sagaStack\n  });\n});\nexport default store;","map":{"version":3,"sources":["/Users/azraibric/Documents/PorukeMotivacije/src/store/index.js"],"names":["combineReducers","createStore","applyMiddleware","compose","all","reducer","formReducer","isLogged","user","quotes","categories","createSagaMiddleware","rootSaga","sagaMiddleware","onError","e","console","log","message","rootReducer","logged","form","resettableAppReducer","state","action","type","RESET_STATE","countries","store","composeWithDevTools","thunkMiddleware","run","done","catch","err","source","stacktrace","sagaStack"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,YAAvC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,SAArB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,CAAC;AAC1CG,EAAAA,OAAO,EAAGC,CAAD,IAAO;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACA,UAAMH,CAAN;AACD;AALyC,CAAD,CAA3C;AAQA,MAAMI,WAAW,GAAGnB,eAAe,CAAC;AAClCoB,EAAAA,MAAM,EAAEb,QAD0B;AAElCC,EAAAA,IAAI,EAAEA,IAF4B;AAGlCC,EAAAA,MAAM,EAAEA,MAH0B;AAIlCC,EAAAA,UAAU,EAAEA,UAJsB;AAKlCW,EAAAA,IAAI,EAAEf;AAL4B,CAAD,CAAnC;;AAQA,MAAMgB,oBAAoB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAC3BL,WAAW,CACTK,MAAM,CAACC,IAAP,KAAgBC,WAAhB,GAA8BH,KAA9B,GAAsC;AAAEI,EAAAA,SAAS,EAAEJ,KAAK,CAACI;AAAnB,CAD7B,EAETH,MAFS,CADb;;AAMA,MAAMI,KAAK,GAAG3B,WAAW,CACvBqB,oBADuB,EAEvBO,mBAAmB,CACjB3B,eAAe,CAAC4B,eAAD,EAAkBjB,cAAlB,CADE,CAEjB;AAFiB,CAFI,CAAzB;AAQAA,cAAc,CAACkB,GAAf,CAAmBnB,QAAnB,EAA6BoB,IAA7B,CAAkCC,KAAlC,CAAyCC,GAAD,IAAS;AAC/ClB,EAAAA,OAAO,CAACC,GAAR,CAAY;AACVC,IAAAA,OAAO,EAAEgB,GAAG,CAAChB,OADH;AAEViB,IAAAA,MAAM,EAAE,WAFE;AAGVC,IAAAA,UAAU,EAAEF,GAAG,CAACG;AAHN,GAAZ;AAKD,CAND;AAQA,eAAeT,KAAf","sourcesContent":["import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\nimport * as all from \"./reducers\";\nimport { reducer as formReducer } from \"redux-form\";\nimport isLogged from \"./reducers/isLogged\";\nimport user from \"./reducers/user\";\nimport quotes from \"./reducers/quotes\";\nimport categories from \"./reducers/categories\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware({\n  onError: (e) => {\n    console.log(\"Redux Saga Error : ----------------------\");\n    console.log(e.message);\n    throw e;\n  },\n});\n\nconst rootReducer = combineReducers({\n  logged: isLogged,\n  user: user,\n  quotes: quotes,\n  categories: categories,\n  form: formReducer,\n});\n\nconst resettableAppReducer = (state, action) =>\n  rootReducer(\n    action.type !== RESET_STATE ? state : { countries: state.countries },\n    action\n  );\n\nconst store = createStore(\n  resettableAppReducer,\n  composeWithDevTools(\n    applyMiddleware(thunkMiddleware, sagaMiddleware)\n    // other store enhancers if any\n  )\n);\n\nsagaMiddleware.run(rootSaga).done.catch((err) => {\n  console.log({\n    message: err.message,\n    source: \"sagaError\",\n    stacktrace: err.sagaStack,\n  });\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}