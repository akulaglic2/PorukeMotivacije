{"ast":null,"code":"var constraints = {\n  first_name: {\n    presence: {\n      allowEmpty: false\n    },\n    format: {\n      scriptDependent: true,\n      pattern: regexPattern.GENERAL_INPUT\n    }\n  },\n  last_name: {\n    presence: {\n      allowEmpty: false\n    },\n    format: {\n      scriptDependent: true,\n      pattern: regexPattern.GENERAL_INPUT\n    }\n  },\n  email: {\n    presence: {\n      allowEmpty: false\n    },\n    email: true\n  },\n  emailOrPhoneNumber: {\n    presence: {\n      allowEmpty: false\n    },\n    emailOrPhoneNumber: true\n  },\n  password: {\n    presence: {\n      allowEmpty: false\n    },\n    length: {\n      minimum: 6\n    }\n  },\n  confirm_password: {\n    presence: {\n      allowEmpty: false\n    },\n    length: {\n      minimum: 6\n    },\n    equality: \"password\"\n  },\n  city: {\n    select: true,\n    presence: {\n      allowEmpty: false\n    }\n  },\n  address: {\n    russianAddress: \"some options\",\n    presence: {\n      allowEmpty: false\n    }\n  },\n  birth_date: {\n    presence: {\n      allowEmpty: false\n    }\n  }\n};\n\nconst _validate = (values, constraints) => {\n  var errors = validateForm(values, constraints);\n  return errors || null;\n};\n\nconst validateLogin = (values, props) => {\n  let v;\n  v = _validate({ ...values,\n    countryIsoCode2: props.intl && props.intl.locale,\n    prefixValue: null,\n    hasPrefixField: false\n  }, {\n    emailOrPhoneNumber: constraints.emailOrPhoneNumber,\n    password: constraints.password\n  });\n  return v;\n};\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"unesi usename polje\";\n  }\n\n  if (!formValues.password) {\n    errors.password = \"unesi password polje\";\n  }\n\n  return errors;\n};","map":{"version":3,"sources":["/Users/azraibric/Documents/PorukeMotivacije/src/assets/utils/validate.js"],"names":["constraints","first_name","presence","allowEmpty","format","scriptDependent","pattern","regexPattern","GENERAL_INPUT","last_name","email","emailOrPhoneNumber","password","length","minimum","confirm_password","equality","city","select","address","russianAddress","birth_date","_validate","values","errors","validateForm","validateLogin","props","v","countryIsoCode2","intl","locale","prefixValue","hasPrefixField","validate","formValues","username"],"mappings":"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","sourcesContent":["var constraints = {\n  first_name: {\n    presence: {\n      allowEmpty: false,\n    },\n    format: {\n      scriptDependent: true,\n      pattern: regexPattern.GENERAL_INPUT,\n    },\n  },\n  last_name: {\n    presence: {\n      allowEmpty: false,\n    },\n    format: {\n      scriptDependent: true,\n      pattern: regexPattern.GENERAL_INPUT,\n    },\n  },\n  email: {\n    presence: {\n      allowEmpty: false,\n    },\n    email: true,\n  },\n  emailOrPhoneNumber: {\n    presence: {\n      allowEmpty: false,\n    },\n    emailOrPhoneNumber: true,\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n    },\n    length: {\n      minimum: 6,\n    },\n  },\n  confirm_password: {\n    presence: {\n      allowEmpty: false,\n    },\n    length: {\n      minimum: 6,\n    },\n    equality: \"password\",\n  },\n  city: {\n    select: true,\n    presence: {\n      allowEmpty: false,\n    },\n  },\n  address: {\n    russianAddress: \"some options\",\n    presence: {\n      allowEmpty: false,\n    },\n  },\n  birth_date: {\n    presence: {\n      allowEmpty: false,\n    },\n  },\n};\n\nconst _validate = (values, constraints) => {\n  var errors = validateForm(values, constraints);\n\n  return errors || null;\n};\n\nconst validateLogin = (values, props) => {\n  let v;\n  v = _validate(\n    {\n      ...values,\n      countryIsoCode2: props.intl && props.intl.locale,\n      prefixValue: null,\n      hasPrefixField: false,\n    },\n    {\n      emailOrPhoneNumber: constraints.emailOrPhoneNumber,\n      password: constraints.password,\n    }\n  );\n  return v;\n};\n\nconst validate = (formValues) => {\n  const errors = {};\n  if (!formValues.username) {\n    errors.username = \"unesi usename polje\";\n  }\n  if (!formValues.password) {\n    errors.password = \"unesi password polje\";\n  }\n  return errors;\n};\n"]},"metadata":{},"sourceType":"module"}